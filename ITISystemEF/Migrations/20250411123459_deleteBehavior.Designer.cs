// <auto-generated />
using System;
using ITISystemEF.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ITISystemEF.Migrations
{
    [DbContext(typeof(MyContext))]
    [Migration("20250411123459_deleteBehavior")]
    partial class deleteBehavior
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ITISystemEF.Models.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<int>("InstructorId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("InstructorId");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DepartmentId = 1,
                            Duration = 12,
                            InstructorId = 4,
                            Name = "MVC"
                        },
                        new
                        {
                            Id = 2,
                            DepartmentId = 3,
                            Duration = 3,
                            InstructorId = 2,
                            Name = "EF"
                        },
                        new
                        {
                            Id = 3,
                            DepartmentId = 2,
                            Duration = 4,
                            InstructorId = 1,
                            Name = "React"
                        },
                        new
                        {
                            Id = 4,
                            DepartmentId = 4,
                            Duration = 6,
                            InstructorId = 3,
                            Name = "iOS"
                        });
                });

            modelBuilder.Entity("ITISystemEF.Models.CourseSession", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("InstructorId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("InstructorId");

                    b.ToTable("CourseSessions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CourseId = 1,
                            Date = new DateTime(2020, 5, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InstructorId = 1,
                            Title = "Day 01"
                        },
                        new
                        {
                            Id = 2,
                            CourseId = 2,
                            Date = new DateTime(2020, 10, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InstructorId = 4,
                            Title = "Day 02"
                        },
                        new
                        {
                            Id = 3,
                            CourseId = 4,
                            Date = new DateTime(2020, 10, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InstructorId = 3,
                            Title = "Day 03"
                        },
                        new
                        {
                            Id = 4,
                            CourseId = 3,
                            Date = new DateTime(2020, 6, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InstructorId = 2,
                            Title = "Day 04"
                        });
                });

            modelBuilder.Entity("ITISystemEF.Models.CourseSessionAttendance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CourseSessionId")
                        .HasColumnType("int");

                    b.Property<int>("Grade")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CourseSessionId");

                    b.HasIndex("StudentId");

                    b.ToTable("CourseSessionAttendance");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CourseSessionId = 1,
                            Grade = 10,
                            Notes = "Excellent",
                            StudentId = 1
                        },
                        new
                        {
                            Id = 2,
                            CourseSessionId = 2,
                            Grade = 9,
                            Notes = "Good",
                            StudentId = 2
                        },
                        new
                        {
                            Id = 3,
                            CourseSessionId = 3,
                            Grade = 8,
                            Notes = "Satisfactory",
                            StudentId = 3
                        },
                        new
                        {
                            Id = 4,
                            CourseSessionId = 4,
                            Grade = 5,
                            Notes = "Needs Improvement",
                            StudentId = 4
                        });
                });

            modelBuilder.Entity("ITISystemEF.Models.CourseStudent", b =>
                {
                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.HasKey("StudentId", "CourseId");

                    b.HasIndex("CourseId");

                    b.ToTable("CourseStudents");

                    b.HasData(
                        new
                        {
                            StudentId = 2,
                            CourseId = 1
                        },
                        new
                        {
                            StudentId = 4,
                            CourseId = 3
                        },
                        new
                        {
                            StudentId = 3,
                            CourseId = 1
                        },
                        new
                        {
                            StudentId = 4,
                            CourseId = 2
                        });
                });

            modelBuilder.Entity("ITISystemEF.Models.Department", b =>
                {
                    b.Property<int>("DepartmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DepartmentId"));

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ManagerId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DepartmentId");

                    b.HasIndex("ManagerId")
                        .IsUnique()
                        .HasFilter("[ManagerId] IS NOT NULL");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            DepartmentId = 1,
                            Location = "Ism",
                            ManagerId = 4,
                            Name = "SD"
                        },
                        new
                        {
                            DepartmentId = 2,
                            Location = "Smart",
                            ManagerId = 3,
                            Name = "UI"
                        },
                        new
                        {
                            DepartmentId = 3,
                            Location = "New Capital",
                            ManagerId = 2,
                            Name = "WC"
                        },
                        new
                        {
                            DepartmentId = 4,
                            Location = "Cairo",
                            ManagerId = 1,
                            Name = "DE"
                        });
                });

            modelBuilder.Entity("ITISystemEF.Models.Instructor", b =>
                {
                    b.Property<int>("InstructorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InstructorId"));

                    b.Property<int?>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("FName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("InstructorId");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Instructors");

                    b.HasData(
                        new
                        {
                            InstructorId = 1,
                            FName = "Mai",
                            LName = "Moustafa",
                            Phone = "01156894563"
                        },
                        new
                        {
                            InstructorId = 2,
                            FName = "Mohamed",
                            LName = "Hatem",
                            Phone = "01234567891"
                        },
                        new
                        {
                            InstructorId = 3,
                            FName = "Mo'men",
                            LName = "Sherief",
                            Phone = "01023456879"
                        },
                        new
                        {
                            InstructorId = 4,
                            FName = "Jamal",
                            LName = "Ali",
                            Phone = "0124578412"
                        });
                });

            modelBuilder.Entity("ITISystemEF.Models.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FName = "Marina",
                            LName = "Mansour",
                            Phone = "01208978713"
                        },
                        new
                        {
                            Id = 2,
                            FName = "Bassem",
                            LName = "Mohamed",
                            Phone = "01547963145"
                        },
                        new
                        {
                            Id = 3,
                            FName = "Ammar",
                            LName = "Attef",
                            Phone = "01023457865"
                        },
                        new
                        {
                            Id = 4,
                            FName = "Kholoud",
                            LName = "Ahmed",
                            Phone = "01147583256"
                        });
                });

            modelBuilder.Entity("ITISystemEF.Models.Course", b =>
                {
                    b.HasOne("ITISystemEF.Models.Department", "Department")
                        .WithMany("Courses")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ITISystemEF.Models.Instructor", "Instructor")
                        .WithMany("Courses")
                        .HasForeignKey("InstructorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");

                    b.Navigation("Instructor");
                });

            modelBuilder.Entity("ITISystemEF.Models.CourseSession", b =>
                {
                    b.HasOne("ITISystemEF.Models.Course", "Course")
                        .WithMany("CourseSessions")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ITISystemEF.Models.Instructor", "Instructor")
                        .WithMany("CourseSessions")
                        .HasForeignKey("InstructorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Instructor");
                });

            modelBuilder.Entity("ITISystemEF.Models.CourseSessionAttendance", b =>
                {
                    b.HasOne("ITISystemEF.Models.CourseSession", "CourseSession")
                        .WithMany("CourseSessionAttendances")
                        .HasForeignKey("CourseSessionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ITISystemEF.Models.Student", "Student")
                        .WithMany("CourseSessionAttendances")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CourseSession");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("ITISystemEF.Models.CourseStudent", b =>
                {
                    b.HasOne("ITISystemEF.Models.Course", "Course")
                        .WithMany("CourseStudents")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ITISystemEF.Models.Student", "Student")
                        .WithMany("CourseStudents")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("ITISystemEF.Models.Department", b =>
                {
                    b.HasOne("ITISystemEF.Models.Instructor", "Manager")
                        .WithOne("ManagedDepartment")
                        .HasForeignKey("ITISystemEF.Models.Department", "ManagerId");

                    b.Navigation("Manager");
                });

            modelBuilder.Entity("ITISystemEF.Models.Instructor", b =>
                {
                    b.HasOne("ITISystemEF.Models.Department", "Department")
                        .WithMany("Instructors")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Department");
                });

            modelBuilder.Entity("ITISystemEF.Models.Course", b =>
                {
                    b.Navigation("CourseSessions");

                    b.Navigation("CourseStudents");
                });

            modelBuilder.Entity("ITISystemEF.Models.CourseSession", b =>
                {
                    b.Navigation("CourseSessionAttendances");
                });

            modelBuilder.Entity("ITISystemEF.Models.Department", b =>
                {
                    b.Navigation("Courses");

                    b.Navigation("Instructors");
                });

            modelBuilder.Entity("ITISystemEF.Models.Instructor", b =>
                {
                    b.Navigation("CourseSessions");

                    b.Navigation("Courses");

                    b.Navigation("ManagedDepartment")
                        .IsRequired();
                });

            modelBuilder.Entity("ITISystemEF.Models.Student", b =>
                {
                    b.Navigation("CourseSessionAttendances");

                    b.Navigation("CourseStudents");
                });
#pragma warning restore 612, 618
        }
    }
}
